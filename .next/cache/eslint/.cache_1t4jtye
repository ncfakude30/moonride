[{"/Users/nhlakaniphofakude/moon-rides/pages/_app.js":"1","/Users/nhlakaniphofakude/moon-rides/pages/api/hello.js":"2","/Users/nhlakaniphofakude/moon-rides/pages/components/Map.js":"3","/Users/nhlakaniphofakude/moon-rides/pages/components/RecentTrips.js":"4","/Users/nhlakaniphofakude/moon-rides/pages/components/RideSelector.js":"5","/Users/nhlakaniphofakude/moon-rides/pages/confirm.js":"6","/Users/nhlakaniphofakude/moon-rides/pages/index.js":"7","/Users/nhlakaniphofakude/moon-rides/pages/login.js":"8","/Users/nhlakaniphofakude/moon-rides/pages/payment.js":"9","/Users/nhlakaniphofakude/moon-rides/pages/search.js":"10","/Users/nhlakaniphofakude/moon-rides/pages/success.js":"11","/Users/nhlakaniphofakude/moon-rides/pages/api/user/login.js":"12"},{"size":212,"mtime":1725119403283,"results":"13","hashOfConfig":"14"},{"size":170,"mtime":1725119403283,"results":"15","hashOfConfig":"14"},{"size":2578,"mtime":1725126602761,"results":"16","hashOfConfig":"14"},{"size":2562,"mtime":1725191785690,"results":"17","hashOfConfig":"14"},{"size":3621,"mtime":1725373725324,"results":"18","hashOfConfig":"14"},{"size":4535,"mtime":1725128952037,"results":"19","hashOfConfig":"14"},{"size":3564,"mtime":1725207041874,"results":"20","hashOfConfig":"14"},{"size":2790,"mtime":1725199011332,"results":"21","hashOfConfig":"14"},{"size":3620,"mtime":1725129199039,"results":"22","hashOfConfig":"14"},{"size":6357,"mtime":1725198891481,"results":"23","hashOfConfig":"14"},{"size":593,"mtime":1725124358719,"results":"24","hashOfConfig":"14"},{"size":841,"mtime":1725196912234,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sbj0mu",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nhlakaniphofakude/moon-rides/pages/_app.js",[],"/Users/nhlakaniphofakude/moon-rides/pages/api/hello.js",[],"/Users/nhlakaniphofakude/moon-rides/pages/components/Map.js",[],"/Users/nhlakaniphofakude/moon-rides/pages/components/RecentTrips.js",[],"/Users/nhlakaniphofakude/moon-rides/pages/components/RideSelector.js",[],"/Users/nhlakaniphofakude/moon-rides/pages/confirm.js",["56"],"import { useEffect, useState } from 'react';\nimport tw from 'tailwind-styled-components';\nimport Map from './components/Map';\nimport { useRouter } from 'next/router';\nimport RideSelector from './components/RideSelector';\nimport Link from 'next/link';\nimport Image from 'next/image';\n\nfunction Confirm() {\n    const router = useRouter();\n    const { pickup, dropoff } = router.query;\n\n    const [pickupCoordinates, setPickupCoordinates] = useState([0, 0]);\n    const [dropoffCoordinates, setDropoffCoordinates] = useState([0, 0]);\n    const [loading, setLoading] = useState(true);\n    const [selectedCar, setSelectedCar] = useState(null);\n\n    useEffect(() => {\n        if (pickup && dropoff) {\n            setLoading(true);\n            getPickupCoordinates(pickup);\n            getDropoffCoordinates(dropoff);\n        }\n    }, [pickup, dropoff]);\n\n    useEffect(() => {\n        if (pickupCoordinates.length > 0 && dropoffCoordinates.length > 0) {\n            setLoading(false);\n        }\n    }, [pickupCoordinates, dropoffCoordinates]);\n\n    const getPickupCoordinates = async (pickup) => {\n        try {\n            const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${pickup}.json?` + \n                new URLSearchParams({\n                    access_token: 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ',\n                    limit: 1,\n                })\n            );\n            const data = await response.json();\n            if (data.features.length > 0) {\n                setPickupCoordinates(data.features[0].center);\n            } else {\n                console.error('No results found for pickup location');\n            }\n        } catch (error) {\n            console.error('Error fetching pickup coordinates:', error);\n        }\n    };\n\n    const getDropoffCoordinates = async (dropoff) => {\n        try {\n            const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${dropoff}.json?` + \n                new URLSearchParams({\n                    access_token: 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ',\n                    limit: 1,\n                })\n            );\n            const data = await response.json();\n            if (data.features.length > 0) {\n                setDropoffCoordinates(data.features[0].center);\n            } else {\n                console.error('No results found for dropoff location');\n            }\n        } catch (error) {\n            console.error('Error fetching dropoff coordinates:', error);\n        }\n    };\n\n    const handleSelectRide = (car) => {\n        setSelectedCar(car);\n        router.push({\n            pathname: '/payment',\n            query: {\n                pickup: `${pickupCoordinates[0]},${pickupCoordinates[1]}`,\n                dropoff: `${dropoffCoordinates[0]},${dropoffCoordinates[1]}`,\n                ride: JSON.stringify(car)\n            }\n        });\n    };\n\n    if (loading) return <p>Loading...</p>;\n\n    return (\n        <Wrapper>\n            <BackButtonContainer>\n                <Link href='/search'>\n                    <BackButton>\n                        <Image src='https://img.icons8.com/ios-filled/50/000000/left.png' alt='Back' layout='fill' />\n                    </BackButton>\n                </Link>\n            </BackButtonContainer>\n            <Map\n                pickupCoordinates={pickupCoordinates}\n                dropoffCoordinates={dropoffCoordinates}\n            />\n            <RideContainer>\n                <RideSelector\n                    pickupCoordinates={pickupCoordinates}\n                    dropoffCoordinates={dropoffCoordinates}\n                    onSelectRide={handleSelectRide}\n                />\n                <ConfirmButtonContainer>\n                    <ConfirmButton onClick={() => handleSelectRide(selectedCar)}>\n                        Confirm UberX\n                    </ConfirmButton>\n                </ConfirmButtonContainer>\n            </RideContainer>\n        </Wrapper>\n    );\n};\n\nexport default Confirm;\n\nconst Wrapper = tw.div`\n    flex h-screen flex-col\n`;\n\nconst RideContainer = tw.div`\n    flex flex-col flex-1 h-1/2\n`;\n\nconst ConfirmButtonContainer = tw.div`\n    border-t-2\n`;\n\nconst ConfirmButton = tw.div`\n    bg-black text-white my-4 mx-4 py-4 text-center text-xl\n`;\n\nconst BackButtonContainer = tw.div`\n    absolute rounded-full top-4 left-4 z-10 bg-white shadow-md cursor-pointer\n`;\n\nconst BackButton = tw.div`\n    relative h-12 w-12\n`;\n","/Users/nhlakaniphofakude/moon-rides/pages/index.js",["57","58"],"import { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport tw from 'tailwind-styled-components';\nimport Map from './components/Map';\nimport Link from 'next/link';\nimport { auth } from '../firebase';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { useRouter } from 'next/router';\nimport RecentTrips from './components/RecentTrips'; // Import the RecentTrips component\nimport MoonRidesImage from '../public/moon-ride.png';\nimport Image from 'next/image';\n\nexport default function Home() {\n    const [user, setUser] = useState(null);\n    const router = useRouter();\n\n    useEffect(() => {\n        return onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser({\n                    name: user.displayName,\n                    photoUrl: user.photoURL,\n                });\n            } else {\n                setUser(null);\n                router.push('/login');\n            }\n        });\n    }, []);\n\n    return (\n        <Wrapper>\n            <Map />\n            <ActionItems>\n                <Header style={{ backgroundColor: '#1a1a2e' }}> {/* Dark blue color */}\n                    <Image src={MoonRidesImage} alt=\"MoonRides Logo\" height={112} width={112} />\n                    <Profile>\n                        <Name>{user && user.name}</Name>\n                        <UserImage\n                            src={user && user.photoUrl}\n                            onClick={() => signOut(auth)}\n                        />\n                    </Profile>\n                </Header>\n                <ActionButtons>\n                    <Link href='/search'>\n                        <ActionButton>\n                            <ActionButtonImage src='https://i.ibb.co/cyvcpfF/uberx.png' />\n                            Ride\n                        </ActionButton>\n                    </Link>\n                    <ActionButton>\n                        <Badge>Coming Soon</Badge>\n                        <ActionButtonImage src='https://i.ibb.co/n776JLm/bike.png' />\n                        Wheels\n                    </ActionButton>\n                    <ActionButton>\n                        <Badge>Coming Soon</Badge>\n                        <ActionButtonImage src='https://i.ibb.co/5RjchBg/uberschedule.png' />\n                        Reserve\n                    </ActionButton>\n                </ActionButtons>\n                <RecentTrips />\n            </ActionItems>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = tw.div`\n    flex flex-col h-screen\n    bg-gradient-to-b from-[#0f0f3f] to-[#0a0a1a] // Night sky gradient with dark blue tones\n`;\n\nconst ActionItems = tw.div`\n    flex-1 p-4\n`;\n\nconst Header = tw.div`\n    flex justify-between items-center p-4\n    rounded-lg // Optional: Add rounded corners if desired\n`;\n\nconst Profile = tw.div`\n    flex items-center\n`;\n\nconst Name = tw.div`\n    mr-4 w-20 text-sm text-gray-300 font-medium // Light gray color, medium weight\n`;\n\nconst UserImage = tw.img`\n    h-12 w-12 rounded-full border border-gray-200 p-px object-cover cursor-pointer\n`;\n\nconst ActionButtons = tw.div`\n    flex\n`;\n\nconst ActionButton = tw.div`\n    relative flex flex-col flex-1 bg-gray-200 m-1 h-32 items-center justify-center rounded-lg overflow-hidden transform hover:scale-105 transition text-xl\n`;\n\nconst ActionButtonImage = tw.img`\n    h-3/5\n`;\n\nconst Badge = tw.div`\n    absolute top-1 left-1 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full\n    whitespace-nowrap\n`;\n\nconst InputButton = tw.div`\n    h-20 bg-gray-200 text-2xl p-4 flex items-center mt-8\n`;\n","/Users/nhlakaniphofakude/moon-rides/pages/login.js",["59"],"import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { signInWithPopup, onAuthStateChanged } from 'firebase/auth';\nimport { auth, provider } from '../firebase';\nimport tw from 'tailwind-styled-components';\nimport Image from 'next/image';\n\n// Import your local images\nimport MoonRidesImage from '../public/moon-ride.png'; // Use local MoonRides image\n\nfunction Login() {\n    const router = useRouter();\n\n    useEffect(() => {\n        const handleAuthStateChanged = async (user) => {\n            if (user) {\n                // Store user data in the database\n                try {\n                    router.push('/');\n                    const response = await fetch('/api/login', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            email: user.email,\n                            displayName: user.displayName,\n                            photoURL: user.photoURL,\n                        }),\n                    });\n\n                    if (response.ok) {\n                        router.push('/');\n                    } else {\n                        console.error('Failed to store user data');\n                    }\n                } catch (error) {\n                    console.error('Error storing user data:', error);\n                }\n            }\n        };\n\n        onAuthStateChanged(auth, handleAuthStateChanged);\n    }, []);\n\n    const handleSignIn = async () => {\n        try {\n            await signInWithPopup(auth, provider);\n        } catch (error) {\n            console.error('Sign in failed:', error);\n        }\n    };\n\n    return (\n        <Wrapper>\n            <Content>\n                <Image src={MoonRidesImage} alt='MoonRides Logo' width={200} height={200} />\n                <Title>Login to access your account</Title>\n                <HeadImage src='https://i.ibb.co/CsV9RYZ/login-image.png' width={300} height={200} />\n                <SignInButton onClick={handleSignIn}>Sign in with Google</SignInButton>\n            </Content>\n        </Wrapper>\n    );\n}\n\nexport default Login;\n\nconst Wrapper = tw.div`\n    flex flex-col min-h-screen bg-gradient-to-b from-gray-900 to-gray-100 // Dark gray gradient\n`;\n\nconst Content = tw.div`\n    flex flex-col items-center justify-center flex-grow p-4\n`;\n\nconst SignInButton = tw.button`\n    bg-black text-white text-center py-4 mt-6 self-center w-full\n`;\n\nconst Title = tw.div`\n    text-5xl font-extrabold text-gray-300 text-center mb-6\n    bg-clip-text text-transparent bg-gradient-to-r from-gray-700 via-gray-800 to-gray-900\n    shadow-md\n`;\n\nconst HeadImage = tw.img`\n    object-contain w-full mt-6\n`;\n","/Users/nhlakaniphofakude/moon-rides/pages/payment.js",["60"],"import { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport tw from 'tailwind-styled-components';\n\nfunction Payment() {\n    const router = useRouter();\n    const { pickup, dropoff, ride } = router.query;\n\n    const [selectedCar, setSelectedCar] = useState(null);\n    const [pickupPlace, setPickupPlace] = useState('');\n    const [dropoffPlace, setDropoffPlace] = useState('');\n    const [paymentStatus, setPaymentStatus] = useState(null);\n\n    useEffect(() => {\n        if (ride) {\n            setSelectedCar(JSON.parse(ride));\n        }\n        if (pickup && dropoff) {\n            fetchPlaceName(pickup, 'pickup');\n            fetchPlaceName(dropoff, 'dropoff');\n        }\n    }, [ride, pickup, dropoff]);\n\n    const fetchPlaceName = async (coordinates, type) => {\n        try {\n            const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${coordinates}.json?` +\n                new URLSearchParams({\n                    access_token: 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ',\n                    limit: 1\n                })\n            );\n            const data = await response.json();\n            const placeName = data.features.length > 0 ? data.features[0].place_name : 'Unknown location';\n            if (type === 'pickup') {\n                setPickupPlace(placeName);\n            } else if (type === 'dropoff') {\n                setDropoffPlace(placeName);\n            }\n        } catch (error) {\n            console.error('Error fetching place name:', error);\n            if (type === 'pickup') {\n                setPickupPlace('Error fetching location');\n            } else if (type === 'dropoff') {\n                setDropoffPlace('Error fetching location');\n            }\n        }\n    };\n\n    const handlePayment = async () => {\n        try {\n            // Mock payment process\n            await new Promise((resolve) => setTimeout(resolve, 2000)); // Simulate network delay\n            setPaymentStatus('success');\n            setTimeout(() => {\n                router.push('/'); // Redirect to home page after payment success\n            }, 1000);\n        } catch (error) {\n            setPaymentStatus('failure');\n        }\n    };\n\n    return (\n        <Wrapper>\n            <Title>Payment</Title>\n            <Details>\n                <p><strong>Pickup:</strong> {pickupPlace}</p>\n                <p><strong>Dropoff:</strong> {dropoffPlace}</p>\n                {selectedCar && (\n                    <div>\n                        <img src={selectedCar.imgUrl} alt={selectedCar.service} />\n                        <p><strong>Service:</strong> {selectedCar.service}</p>\n                        <p><strong>Price:</strong> {selectedCar.multiplier * 10}</p> {/* Replace with actual price calculation */}\n                    </div>\n                )}\n                {paymentStatus === 'success' && <SuccessMessage>Payment successful! Redirecting to home...</SuccessMessage>}\n                {paymentStatus === 'failure' && <ErrorMessage>Payment failed. Please try again.</ErrorMessage>}\n            </Details>\n            <Button onClick={handlePayment}>Confirm Payment</Button>\n        </Wrapper>\n    );\n}\n\nexport default Payment;\n\nconst Wrapper = tw.div`\n    flex flex-col items-center justify-center h-screen p-4\n`;\n\nconst Title = tw.h1`\n    text-2xl font-bold mb-4\n`;\n\nconst Details = tw.div`\n    mb-4\n`;\n\nconst Button = tw.button`\n    bg-black text-white py-2 px-4 rounded\n`;\n\nconst SuccessMessage = tw.p`\n    text-green-500 mt-4\n`;\n\nconst ErrorMessage = tw.p`\n    text-red-500 mt-4\n`;\n","/Users/nhlakaniphofakude/moon-rides/pages/search.js",["61","62"],"import { useState, useEffect } from 'react';\nimport tw from 'tailwind-styled-components';\nimport Link from 'next/link';\nimport mapboxgl from 'mapbox-gl'; // Import Mapbox GL JS\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'; // Import Mapbox Geocoder\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ';\n\nfunction Search() {\n    const [pickup, setPickup] = useState('');\n    const [dropoff, setDropoff] = useState('');\n    const [map, setMap] = useState(null);\n    const [pickupMarker, setPickupMarker] = useState(null);\n    const [dropoffMarker, setDropoffMarker] = useState(null);\n\n    useEffect(() => {\n        const mapContainer = document.getElementById('map');\n        if (mapContainer && !map) {\n            const newMap = new mapboxgl.Map({\n                container: mapContainer,\n                style: 'mapbox://styles/mapbox/satellite-v9', // Use satellite imagery\n                center: [-74.5, 40], // Default center\n                zoom: 9,\n            });\n\n            // Add Geocoder Control\n            const geocoder = new MapboxGeocoder({\n                accessToken: mapboxgl.accessToken,\n                types: 'address',\n                placeholder: 'Search for a location',\n                mapboxgl: mapboxgl\n            });\n\n            // Handle search result for pickup and dropoff\n            geocoder.on('result', (e) => {\n                const { place_name, center } = e.result;\n                if (!pickupMarker) {\n                    setPickup(place_name);\n                    setPickupMarker(new mapboxgl.Marker({ color: 'blue' })\n                        .setLngLat(center)\n                        .addTo(newMap));\n                    newMap.setCenter(center); // Center the map on pickup location\n                } else {\n                    setDropoff(place_name);\n                    setDropoffMarker(new mapboxgl.Marker({ color: 'red' })\n                        .setLngLat(center)\n                        .addTo(newMap));\n                }\n            });\n\n            newMap.addControl(geocoder);\n\n            // Add event listener to handle map clicks\n            newMap.on('click', (e) => {\n                if (!pickupMarker) {\n                    setPickupMarker(new mapboxgl.Marker({ color: 'blue' })\n                        .setLngLat(e.lngLat)\n                        .addTo(newMap));\n                    setPickup([e.lngLat.lng, e.lngLat.lat]);\n                } else if (!dropoffMarker) {\n                    setDropoffMarker(new mapboxgl.Marker({ color: 'red' })\n                        .setLngLat(e.lngLat)\n                        .addTo(newMap));\n                    setDropoff([e.lngLat.lng, e.lngLat.lat]);\n                }\n            });\n\n            // Get and set user location\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    newMap.setCenter([longitude, latitude]);\n                    newMap.setZoom(14); // Set zoom level closer to user's location\n                },\n                (error) => {\n                    console.error('Error getting user location:', error);\n                    // Optionally handle error and set default location\n                }\n            );\n\n            setMap(newMap);\n        }\n    }, [map]);\n\n    \n    const handlePickupChange = (e) => {\n        const value = e.target.value;\n        setPickup(value);\n    };\n\n    const handleDropoffChange = (e) => {\n        const value = e.target.value;\n        setDropoff(value);\n    };\n\n    return (\n        <Wrapper>\n            <MapContainer id=\"map\" />\n            <InputContainer>\n                <FromToIcons>\n                    <Circle src='https://img.icons8.com/ios-filled/50/9CA3AF/filled-circle.png' />\n                    <Line src='https://img.icons8.com/ios/50/9CA3AF/vertical-line.png' />\n                    <Square src='https://img.icons8.com/windows/50/000000/square-full.png' />\n                </FromToIcons>\n                <InputBoxes>\n                    <Input\n                        placeholder='Enter pickup location'\n                        value={pickup}\n                        onChange={handlePickupChange}\n                    />\n                    <Input\n                        placeholder='Where to?'\n                        value={dropoff}\n                        onChange={handleDropoffChange}\n                    />\n                </InputBoxes>\n                <PlusIcon src='https://img.icons8.com/ios/50/000000/plus-math.png' />\n            </InputContainer>\n            <SavedPlaces>\n                <StartIcon src='https://img.icons8.com/ios-filled/50/ffffff/star--v1.png' />\n                Saved Places\n            </SavedPlaces>\n            <Link href={{\n                pathname: '/confirm',\n                query: {\n                    pickup: pickupMarker ? pickupMarker.getLngLat().toArray().join(',') : pickup,\n                    dropoff: dropoffMarker ? dropoffMarker.getLngLat().toArray().join(',') : dropoff,\n                }\n            }}>\n                <ConfirmContainer>\n                    <ConfirmButton>Confirm Locations</ConfirmButton>\n                </ConfirmContainer>\n            </Link>\n        </Wrapper>\n    );\n};\n\n\nexport default Search;\n\nconst Wrapper = tw.div`\n    bg-gray-200 h-screen\n`;\n\nconst MapContainer = tw.div`\n    h-1/2 w-full\n`;\n\nconst ButtonContainer = tw.div`\n    bg-white px-4\n`;\n\nconst BackButton = tw.img`\n    h-12 cursor-pointer\n`;\n\nconst FromToIcons = tw.div`\n    w-10 flex flex-col mr-2 items-center\n`;\n\nconst InputContainer = tw.div`\n    bg-white flex items-center px-4 mb-2\n`;\n\nconst Circle = tw.img`\n    h-2.5\n`;\n\nconst Line = tw.img`\n    h-10\n`;\n\nconst Square = tw.img`\n    h-3\n`;\n\nconst InputBoxes = tw.div`\n    flex flex-col flex-1\n`;\n\nconst Input = tw.input`\n    h-10 bg-gray-200 my-2 rounded-2 p-2 outline-none border-none ml-3\n`;\n\nconst PlusIcon = tw.img`\n    w-10 h-10 bg-gray-200 rounded-full ml-3\n`;\n\nconst SavedPlaces = tw.div`\n    flex items-center bg-white px-4 py-2\n`;\n\nconst StartIcon = tw.img`\n    bg-gray-400 w-10 h-10 p-2 rounded-full mr-2\n`;\n\nconst ConfirmContainer = tw.div`\n    bg-black text-white text-center mt-2 mx-4 px-4 py-3 text-2xl cursor-pointer\n`;\n\nconst ConfirmButton = tw.div`\n    text-white\n`;\n","/Users/nhlakaniphofakude/moon-rides/pages/success.js",["63"],"import Link from 'next/link';\nimport tw from 'tailwind-styled-components';\n\nfunction Success() {\n    return (\n        <Wrapper>\n            <Message>Thank you! Your trip has been confirmed and payment was successful.</Message>\n            <Link href='/'>\n                <HomeButton>Go Home</HomeButton>\n            </Link>\n        </Wrapper>\n    );\n}\n\nexport default Success;\n\nconst Wrapper = tw.div`\n    flex h-screen items-center justify-center flex-col\n`;\n\nconst Message = tw.div`\n    text-xl mb-4\n`;\n\nconst HomeButton = tw.div`\n    bg-black text-white py-2 px-4 rounded cursor-pointer\n`;\n","/Users/nhlakaniphofakude/moon-rides/pages/api/user/login.js",[],{"ruleId":"64","severity":1,"message":"65","line":87,"column":17,"nodeType":"66","endLine":87,"endColumn":38},{"ruleId":"67","severity":1,"message":"68","line":29,"column":8,"nodeType":"69","endLine":29,"endColumn":10,"suggestions":"70"},{"ruleId":"64","severity":1,"message":"65","line":46,"column":21,"nodeType":"66","endLine":46,"endColumn":42},{"ruleId":"67","severity":1,"message":"68","line":44,"column":8,"nodeType":"69","endLine":44,"endColumn":10,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":70,"column":25,"nodeType":"66","endLine":70,"endColumn":83},{"ruleId":"67","severity":1,"message":"74","line":83,"column":8,"nodeType":"69","endLine":83,"endColumn":13,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"65","line":123,"column":13,"nodeType":"66","endLine":129,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":8,"column":13,"nodeType":"66","endLine":8,"endColumn":28},"@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["76"],["77"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","React Hook useEffect has missing dependencies: 'dropoffMarker' and 'pickupMarker'. Either include them or remove the dependency array.",["78"],{"desc":"79","fix":"80"},{"desc":"79","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [router]",{"range":"84","text":"85"},{"range":"86","text":"85"},"Update the dependencies array to be: [dropoffMarker, map, pickupMarker]",{"range":"87","text":"88"},[966,968],"[router]",[1550,1552],[3381,3386],"[dropoffMarker, map, pickupMarker]"]