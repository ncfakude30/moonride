[{"/Users/nhlakaniphofakude/uber-clone-1/pages/_app.js":"1","/Users/nhlakaniphofakude/uber-clone-1/pages/api/hello.js":"2","/Users/nhlakaniphofakude/uber-clone-1/pages/components/Map.js":"3","/Users/nhlakaniphofakude/uber-clone-1/pages/components/RideSelector.js":"4","/Users/nhlakaniphofakude/uber-clone-1/pages/confirm.js":"5","/Users/nhlakaniphofakude/uber-clone-1/pages/index.js":"6","/Users/nhlakaniphofakude/uber-clone-1/pages/login.js":"7","/Users/nhlakaniphofakude/uber-clone-1/pages/search.js":"8","/Users/nhlakaniphofakude/uber-clone-1/pages/success.js":"9","/Users/nhlakaniphofakude/uber-clone-1/pages/payment.js":"10","/Users/nhlakaniphofakude/uber-clone-1/pages/components/RecentTrips.js":"11"},{"size":212,"mtime":1725119403283,"results":"12","hashOfConfig":"13"},{"size":170,"mtime":1725119403283,"results":"14","hashOfConfig":"13"},{"size":2578,"mtime":1725126602761,"results":"15","hashOfConfig":"13"},{"size":3621,"mtime":1725128930765,"results":"16","hashOfConfig":"13"},{"size":4535,"mtime":1725128952037,"results":"17","hashOfConfig":"13"},{"size":3047,"mtime":1725129021561,"results":"18","hashOfConfig":"13"},{"size":1191,"mtime":1725120541448,"results":"19","hashOfConfig":"13"},{"size":2981,"mtime":1725122836444,"results":"20","hashOfConfig":"13"},{"size":593,"mtime":1725124358719,"results":"21","hashOfConfig":"13"},{"size":3620,"mtime":1725129199039,"results":"22","hashOfConfig":"13"},{"size":2487,"mtime":1725125717254,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qj5gcf",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nhlakaniphofakude/uber-clone-1/pages/_app.js",[],"/Users/nhlakaniphofakude/uber-clone-1/pages/api/hello.js",[],"/Users/nhlakaniphofakude/uber-clone-1/pages/components/Map.js",[],"/Users/nhlakaniphofakude/uber-clone-1/pages/components/RideSelector.js",[],"/Users/nhlakaniphofakude/uber-clone-1/pages/confirm.js",["52"],"import { useEffect, useState } from 'react';\nimport tw from 'tailwind-styled-components';\nimport Map from './components/Map';\nimport { useRouter } from 'next/router';\nimport RideSelector from './components/RideSelector';\nimport Link from 'next/link';\nimport Image from 'next/image';\n\nfunction Confirm() {\n    const router = useRouter();\n    const { pickup, dropoff } = router.query;\n\n    const [pickupCoordinates, setPickupCoordinates] = useState([0, 0]);\n    const [dropoffCoordinates, setDropoffCoordinates] = useState([0, 0]);\n    const [loading, setLoading] = useState(true);\n    const [selectedCar, setSelectedCar] = useState(null);\n\n    useEffect(() => {\n        if (pickup && dropoff) {\n            setLoading(true);\n            getPickupCoordinates(pickup);\n            getDropoffCoordinates(dropoff);\n        }\n    }, [pickup, dropoff]);\n\n    useEffect(() => {\n        if (pickupCoordinates.length > 0 && dropoffCoordinates.length > 0) {\n            setLoading(false);\n        }\n    }, [pickupCoordinates, dropoffCoordinates]);\n\n    const getPickupCoordinates = async (pickup) => {\n        try {\n            const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${pickup}.json?` + \n                new URLSearchParams({\n                    access_token: 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ',\n                    limit: 1,\n                })\n            );\n            const data = await response.json();\n            if (data.features.length > 0) {\n                setPickupCoordinates(data.features[0].center);\n            } else {\n                console.error('No results found for pickup location');\n            }\n        } catch (error) {\n            console.error('Error fetching pickup coordinates:', error);\n        }\n    };\n\n    const getDropoffCoordinates = async (dropoff) => {\n        try {\n            const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${dropoff}.json?` + \n                new URLSearchParams({\n                    access_token: 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ',\n                    limit: 1,\n                })\n            );\n            const data = await response.json();\n            if (data.features.length > 0) {\n                setDropoffCoordinates(data.features[0].center);\n            } else {\n                console.error('No results found for dropoff location');\n            }\n        } catch (error) {\n            console.error('Error fetching dropoff coordinates:', error);\n        }\n    };\n\n    const handleSelectRide = (car) => {\n        setSelectedCar(car);\n        router.push({\n            pathname: '/payment',\n            query: {\n                pickup: `${pickupCoordinates[0]},${pickupCoordinates[1]}`,\n                dropoff: `${dropoffCoordinates[0]},${dropoffCoordinates[1]}`,\n                ride: JSON.stringify(car)\n            }\n        });\n    };\n\n    if (loading) return <p>Loading...</p>;\n\n    return (\n        <Wrapper>\n            <BackButtonContainer>\n                <Link href='/search'>\n                    <BackButton>\n                        <Image src='https://img.icons8.com/ios-filled/50/000000/left.png' alt='Back' layout='fill' />\n                    </BackButton>\n                </Link>\n            </BackButtonContainer>\n            <Map\n                pickupCoordinates={pickupCoordinates}\n                dropoffCoordinates={dropoffCoordinates}\n            />\n            <RideContainer>\n                <RideSelector\n                    pickupCoordinates={pickupCoordinates}\n                    dropoffCoordinates={dropoffCoordinates}\n                    onSelectRide={handleSelectRide}\n                />\n                <ConfirmButtonContainer>\n                    <ConfirmButton onClick={() => handleSelectRide(selectedCar)}>\n                        Confirm UberX\n                    </ConfirmButton>\n                </ConfirmButtonContainer>\n            </RideContainer>\n        </Wrapper>\n    );\n};\n\nexport default Confirm;\n\nconst Wrapper = tw.div`\n    flex h-screen flex-col\n`;\n\nconst RideContainer = tw.div`\n    flex flex-col flex-1 h-1/2\n`;\n\nconst ConfirmButtonContainer = tw.div`\n    border-t-2\n`;\n\nconst ConfirmButton = tw.div`\n    bg-black text-white my-4 mx-4 py-4 text-center text-xl\n`;\n\nconst BackButtonContainer = tw.div`\n    absolute rounded-full top-4 left-4 z-10 bg-white shadow-md cursor-pointer\n`;\n\nconst BackButton = tw.div`\n    relative h-12 w-12\n`;\n","/Users/nhlakaniphofakude/uber-clone-1/pages/index.js",["53","54"],"import { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport tw from 'tailwind-styled-components';\nimport Map from './components/Map';\nimport Link from 'next/link';\nimport { auth } from '../firebase';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { useRouter } from 'next/router';\nimport RecentTrips from './components/RecentTrips'; // Import the RecentTrips component\n\nexport default function Home() {\n    const [user, setUser] = useState(null);\n    const router = useRouter();\n\n    useEffect(() => {\n        return onAuthStateChanged(auth, user => {\n            if (user) {\n                setUser({\n                    name: user.displayName,\n                    photoUrl: user.photoURL,\n                });\n            } else {\n                setUser(null);\n                router.push('/login');\n            }\n        });\n    }, []);\n\n    return (\n        <Wrapper>\n            <Map />\n            <ActionItems>\n                <Header>\n                    <UberLogo src='https://i.ibb.co/ZMhy8ws/uber-logo.png' />\n                    <Profile>\n                        <Name>{user && user.name}</Name>\n                        <UserImage\n                            src={user && user.photoUrl}\n                            onClick={() => signOut(auth)}\n                        />\n                    </Profile>\n                </Header>\n                <ActionButtons>\n                    <Link href='/search'>\n                        <ActionButton>\n                            <ActionButtonImage src='https://i.ibb.co/cyvcpfF/uberx.png' />\n                            Ride\n                        </ActionButton>\n                    </Link>\n                    <ActionButton>\n                        <ActionButtonImage src='https://i.ibb.co/n776JLm/bike.png' />\n                        Wheels\n                    </ActionButton>\n                    <ActionButton>\n                        <ActionButtonImage src='https://i.ibb.co/5RjchBg/uberschedule.png' />\n                        Reserve\n                    </ActionButton>\n                </ActionButtons>\n                <InputButton>Where to</InputButton>\n                <RecentTrips /> {/* Add the RecentTrips component here */}\n            </ActionItems>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = tw.div`\n    flex flex-col h-screen\n`;\n\nconst ActionItems = tw.div`\n    flex-1 p-4\n`;\n\nconst Header = tw.div`\n    flex justify-between items-center\n`;\n\nconst UberLogo = tw.img`\n    h-28\n`;\n\nconst Profile = tw.div`\n    flex items-center\n`;\n\nconst Name = tw.div`\n    mr-4 w-20 text-sm\n`;\n\nconst UserImage = tw.img`\n    h-12 w-12 rounded-full border border-gray-200 p-px object-cover cursor-pointer\n`;\n\nconst ActionButtons = tw.div`\n    flex\n`;\n\nconst ActionButton = tw.div`\n    flex flex-col flex-1 bg-gray-200 m-1 h-32 items-center justify-center rounded-lg transform hover:scale-105 transition text-xl\n`;\n\nconst ActionButtonImage = tw.img`\n    h-3/5\n`;\n\nconst InputButton = tw.div`\n    h-20 bg-gray-200 text-2xl p-4 flex items-center mt-8\n`;\n","/Users/nhlakaniphofakude/uber-clone-1/pages/login.js",["55"],"import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { signInWithPopup, onAuthStateChanged } from 'firebase/auth';\nimport { auth, provider } from '../firebase';\nimport tw from 'tailwind-styled-components';\n\nfunction Login() {\n\n    const router = useRouter();\n\n    useEffect(() => {\n        onAuthStateChanged(auth, user => {\n            if (user) {\n                router.push('/');\n            };\n        });\n    }, []);\n\n    return (\n        <Wrapper>\n            <UberLogo src='https://i.ibb.co/ZMhy8ws/uber-logo.png' />\n            <Title>Login to access your account</Title>\n            <HeadImage src='https://i.ibb.co/CsV9RYZ/login-image.png' />\n            <SignInButton onClick={() => signInWithPopup(auth, provider)}>Sign in with Google</SignInButton>\n        </Wrapper>\n    )\n}\n\nexport default Login\n\nconst Wrapper = tw.div`\n    flex flex-col h-screen bg-gray-200 p-4\n`\n\nconst SignInButton = tw.button`\n    bg-black text-white text-center py-4 mt-8 self-center w-full\n`\n\nconst UberLogo = tw.img`\n    h-20 w-auto object-contain self-start\n`\nconst Title = tw.div`\n    text-5xl pt-4 text-gray-500\n`\n\nconst HeadImage = tw.img`\n    object-contain w-full\n`","/Users/nhlakaniphofakude/uber-clone-1/pages/search.js",["56","57"],"import { useState } from 'react';\nimport tw from 'tailwind-styled-components';\nimport Link from 'next/link';\n\nfunction Search() {\n    const [pickup, setPickup] = useState('');\n    const [dropoff, setDropoff] = useState('');\n\n    return (\n        <Wrapper>\n            <ButtonContainer>\n                <Link href='/'>\n                    <BackButton src='https://img.icons8.com/ios-filled/50/000000/left.png' />\n                </Link>\n            </ButtonContainer>\n            <InputContainer>\n                <FromToIcons>\n                    <Circle src='https://img.icons8.com/ios-filled/50/9CA3AF/filled-circle.png' />\n                    <Line src='https://img.icons8.com/ios/50/9CA3AF/vertical-line.png' />\n                    <Square src='https://img.icons8.com/windows/50/000000/square-full.png' />\n                </FromToIcons>\n                <InputBoxes>\n                    <Input\n                        placeholder='Enter pickup location'\n                        value={pickup}\n                        onChange={e => setPickup(e.target.value)}\n                    />\n                    <Input\n                        placeholder='Where to?'\n                        value={dropoff}\n                        onChange={e => setDropoff(e.target.value)}\n                    />\n                </InputBoxes>\n                <PlusIcon src='https://img.icons8.com/ios/50/000000/plus-math.png' />\n            </InputContainer>\n            <SavedPlaces>\n                <StartIcon src='https://img.icons8.com/ios-filled/50/ffffff/star--v1.png' />\n                Saved Places\n            </SavedPlaces>\n            <Link href={{\n                pathname: '/confirm',\n                query: {\n                    pickup: pickup,\n                    dropoff: dropoff,\n                }\n            }}>\n                <ConfirmContainer>\n                    <ConfirmButton>Confirm Locations</ConfirmButton>\n                </ConfirmContainer>\n            </Link>\n        </Wrapper>\n    );\n};\n\nexport default Search;\n\nconst Wrapper = tw.div`\n    bg-gray-200 h-screen\n`;\n\nconst ButtonContainer = tw.div`\n    bg-white px-4\n`;\n\nconst BackButton = tw.img`\n    h-12 cursor-pointer\n`;\n\nconst FromToIcons = tw.div`\n    w-10 flex flex-col mr-2 items-center\n`;\n\nconst InputContainer = tw.div`\n    bg-white flex items-center px-4 mb-2\n`;\n\nconst Circle = tw.img`\n    h-2.5\n`;\n\nconst Line = tw.img`\n    h-10\n`;\n\nconst Square = tw.img`\n    h-3\n`;\n\nconst InputBoxes = tw.div`\n    flex flex-col flex-1\n`;\n\nconst Input = tw.input`\n    h-10 bg-gray-200 my-2 rounded-2 p-2 outline-none border-none ml-3\n`;\n\nconst PlusIcon = tw.img`\n    w-10 h-10 bg-gray-200 rounded-full ml-3\n`;\n\nconst SavedPlaces = tw.div`\n    flex items-center bg-white px-4 py-2\n`;\n\nconst StartIcon = tw.img`\n    bg-gray-400 w-10 h-10 p-2 rounded-full mr-2\n`;\n\nconst ConfirmContainer = tw.div`\n    bg-black text-white text-center mt-2 mx-4 px-4 py-3 text-2xl cursor-pointer\n`;\n\nconst ConfirmButton = tw.div`\n    text-white\n`;\n","/Users/nhlakaniphofakude/uber-clone-1/pages/success.js",["58"],"import Link from 'next/link';\nimport tw from 'tailwind-styled-components';\n\nfunction Success() {\n    return (\n        <Wrapper>\n            <Message>Thank you! Your trip has been confirmed and payment was successful.</Message>\n            <Link href='/'>\n                <HomeButton>Go Home</HomeButton>\n            </Link>\n        </Wrapper>\n    );\n}\n\nexport default Success;\n\nconst Wrapper = tw.div`\n    flex h-screen items-center justify-center flex-col\n`;\n\nconst Message = tw.div`\n    text-xl mb-4\n`;\n\nconst HomeButton = tw.div`\n    bg-black text-white py-2 px-4 rounded cursor-pointer\n`;\n","/Users/nhlakaniphofakude/uber-clone-1/pages/payment.js",["59"],"import { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport tw from 'tailwind-styled-components';\n\nfunction Payment() {\n    const router = useRouter();\n    const { pickup, dropoff, ride } = router.query;\n\n    const [selectedCar, setSelectedCar] = useState(null);\n    const [pickupPlace, setPickupPlace] = useState('');\n    const [dropoffPlace, setDropoffPlace] = useState('');\n    const [paymentStatus, setPaymentStatus] = useState(null);\n\n    useEffect(() => {\n        if (ride) {\n            setSelectedCar(JSON.parse(ride));\n        }\n        if (pickup && dropoff) {\n            fetchPlaceName(pickup, 'pickup');\n            fetchPlaceName(dropoff, 'dropoff');\n        }\n    }, [ride, pickup, dropoff]);\n\n    const fetchPlaceName = async (coordinates, type) => {\n        try {\n            const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${coordinates}.json?` +\n                new URLSearchParams({\n                    access_token: 'pk.eyJ1IjoibmNmY29ycCIsImEiOiJjbTBpY3Z6YnAwN240MmxzOXV2dnNzNzEwIn0.oVdWZdXHm_FMRDU2s4mAxQ',\n                    limit: 1\n                })\n            );\n            const data = await response.json();\n            const placeName = data.features.length > 0 ? data.features[0].place_name : 'Unknown location';\n            if (type === 'pickup') {\n                setPickupPlace(placeName);\n            } else if (type === 'dropoff') {\n                setDropoffPlace(placeName);\n            }\n        } catch (error) {\n            console.error('Error fetching place name:', error);\n            if (type === 'pickup') {\n                setPickupPlace('Error fetching location');\n            } else if (type === 'dropoff') {\n                setDropoffPlace('Error fetching location');\n            }\n        }\n    };\n\n    const handlePayment = async () => {\n        try {\n            // Mock payment process\n            await new Promise((resolve) => setTimeout(resolve, 2000)); // Simulate network delay\n            setPaymentStatus('success');\n            setTimeout(() => {\n                router.push('/'); // Redirect to home page after payment success\n            }, 1000);\n        } catch (error) {\n            setPaymentStatus('failure');\n        }\n    };\n\n    return (\n        <Wrapper>\n            <Title>Payment</Title>\n            <Details>\n                <p><strong>Pickup:</strong> {pickupPlace}</p>\n                <p><strong>Dropoff:</strong> {dropoffPlace}</p>\n                {selectedCar && (\n                    <div>\n                        <img src={selectedCar.imgUrl} alt={selectedCar.service} />\n                        <p><strong>Service:</strong> {selectedCar.service}</p>\n                        <p><strong>Price:</strong> {selectedCar.multiplier * 10}</p> {/* Replace with actual price calculation */}\n                    </div>\n                )}\n                {paymentStatus === 'success' && <SuccessMessage>Payment successful! Redirecting to home...</SuccessMessage>}\n                {paymentStatus === 'failure' && <ErrorMessage>Payment failed. Please try again.</ErrorMessage>}\n            </Details>\n            <Button onClick={handlePayment}>Confirm Payment</Button>\n        </Wrapper>\n    );\n}\n\nexport default Payment;\n\nconst Wrapper = tw.div`\n    flex flex-col items-center justify-center h-screen p-4\n`;\n\nconst Title = tw.h1`\n    text-2xl font-bold mb-4\n`;\n\nconst Details = tw.div`\n    mb-4\n`;\n\nconst Button = tw.button`\n    bg-black text-white py-2 px-4 rounded\n`;\n\nconst SuccessMessage = tw.p`\n    text-green-500 mt-4\n`;\n\nconst ErrorMessage = tw.p`\n    text-red-500 mt-4\n`;\n","/Users/nhlakaniphofakude/uber-clone-1/pages/components/RecentTrips.js",[],{"ruleId":"60","severity":1,"message":"61","line":87,"column":17,"nodeType":"62","endLine":87,"endColumn":38},{"ruleId":"63","severity":1,"message":"64","line":27,"column":8,"nodeType":"65","endLine":27,"endColumn":10,"suggestions":"66"},{"ruleId":"60","severity":1,"message":"61","line":44,"column":21,"nodeType":"62","endLine":44,"endColumn":42},{"ruleId":"63","severity":1,"message":"64","line":17,"column":8,"nodeType":"65","endLine":17,"endColumn":10,"suggestions":"67"},{"ruleId":"60","severity":1,"message":"61","line":12,"column":17,"nodeType":"62","endLine":12,"endColumn":32},{"ruleId":"60","severity":1,"message":"61","line":40,"column":13,"nodeType":"62","endLine":46,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":8,"column":13,"nodeType":"62","endLine":8,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":70,"column":25,"nodeType":"62","endLine":70,"endColumn":83},"@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["70"],["71"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.",{"desc":"72","fix":"73"},{"desc":"72","fix":"74"},"Update the dependencies array to be: [router]",{"range":"75","text":"76"},{"range":"77","text":"76"},[878,880],"[router]",[447,449]]