# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: ncfcorp
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: moon-rides
service: moonrides

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  environment:
    TRIPS_TABLE: TripsTable
    USERS_TABLE: UsersTable  # Added Users Table environment variable
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TRIPS_TABLE}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}  # Allow access to Users Table
    - Effect: "Allow"
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  login:
    handler: user/login.handler
    events:
      - http:
          path: login
          method: post
          cors:
            origin:
              - 'https://www.moonride.co.za'
              - 'https://moonride.co.za'
              - 'http://localhost:3000'  # Allow local testing on port 3000
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  getUser:
    handler: user/getUser.handler  # Lambda function to retrieve user data
    events:
      - http:
          path: user/{userId}
          method: get
          cors:
            origin:
              - 'https://www.moonride.co.za'
              - 'https://moonride.co.za'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
  
  getRecentTrips:
    handler: ride/ride.handler
    events:
      - http:
          path: trips
          method: get
          cors:
            origin:
              - 'https://www.moonride.co.za'
              - 'https://moonride.co.za'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  requestRide:
    handler: ride/request.handler
    events:
      - http:
          path: request
          method: post
          cors:
            origin:
              - 'https://www.moonride.co.za'
              - 'https://moonride.co.za'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  processPayment:
    handler: process_payment.handler
    events:
      - http:
          path: payment
          method: post
          cors:
            origin:
              - 'https://www.moonride.co.za'
              - 'https://moonride.co.za'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

resources:
  Resources:
    TripsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.TRIPS_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: tripDate
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: tripDate
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    UsersTable:  # Added UsersTable resource
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
    slim: true
    zip: true

package:
  individually: true
  include:
    - vendor/**
    - handler.py
